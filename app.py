from flask import Flask, render_template, request, redirect, flash, json
import sqlite3
import datetime
import os

app = Flask(__name__)
app.secret_key = "your_secret_key_here"

# üîß –°—Ç–≤–æ—Ä–∏—Ç–∏ –ë–î, —è–∫—â–æ —ó—ó —â–µ –Ω–µ–º–∞
if not os.path.exists("database.db"):
    import init_db  # –≤–∏–∫–ª–∏–∫–∞—î —Ñ–∞–π–ª init_db.py –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–∏

# –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
@app.route("/")
def index():
    return render_template("index.html")

# –°—Ç–æ—Ä—ñ–Ω–∫–∞ –ø–æ—Å–ª—É–≥
@app.route("/services")
def services():
    return render_template("services.html")

# –°—Ç–æ—Ä—ñ–Ω–∫–∞ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è
@app.route("/booking", methods=["GET", "POST"])
def booking():
    if request.method == "POST":
        name = request.form["name"]
        email = request.form["email"]
        phone = request.form["phone"]
        service = request.form["service"]
        date = request.form["date"]
        time = request.form["time"]

        try:
            conn = sqlite3.connect("database.db")
            c = conn.cursor()

            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∑–∞–π–Ω—è—Ç—ñ—Å—Ç—å
            c.execute("SELECT * FROM bookings WHERE date = ? AND time = ?", (date, time))
            existing = c.fetchone()

            if existing:
                flash("‚ùå This date and time is already booked!", "error")
            else:
                c.execute("""
                    INSERT INTO bookings (name, email, phone, service, date, time)
                    VALUES (?, ?, ?, ?, ?, ?)
                """, (name, email, phone, service, date, time))
                conn.commit()
                flash("‚úÖ Booking successfully submitted!", "success")

            conn.close()
        except Exception as e:
            flash("‚ùå Error while saving booking: " + str(e), "error")

        return redirect("/booking")

    return render_template("booking.html")

# –°—Ç–æ—Ä—ñ–Ω–∫–∞ –ª–æ–∫–∞—Ü—ñ—ó
@app.route("/location")
def location():
    return render_template("location.html")

# –ö–∞–ª–µ–Ω–¥–∞—Ä –±—Ä–æ–Ω—é–≤–∞–Ω—å
@app.route("/calendar")
def calendar():
    conn = sqlite3.connect("database.db")
    cursor = conn.cursor()
    cursor.execute("SELECT name, date FROM bookings")
    rows = cursor.fetchall()
    conn.close()

    events = []

    for row in rows:
        try:
            date_str = row[1]
            datetime.datetime.strptime(date_str, "%Y-%m-%d")
            events.append({
                "title": f"Booked: {row[0]}",
                "start": date_str,
                "color": "#e67e22"
            })
        except Exception as e:
            print("‚ùå Skip invalid date:", row, "| Error:", e)

    return render_template("calendar.html", events=json.dumps(events))

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    app.run(debug=True)